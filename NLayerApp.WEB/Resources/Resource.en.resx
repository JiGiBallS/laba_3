<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DateEndEducation" xml:space="preserve">
    <value>Date end education</value>
  </data>
  <data name="DateEndEducationRequired" xml:space="preserve">
    <value>The "Date end education" field must be filled</value>
  </data>
  <data name="DateEndProjects" xml:space="preserve">
    <value>Date end projects</value>
  </data>
  <data name="DateStartJob" xml:space="preserve">
    <value>Date start job</value>
  </data>
  <data name="DateStartJobRequired" xml:space="preserve">
    <value>The "Date start job" field must be filled</value>
  </data>
  <data name="DateStartProjects" xml:space="preserve">
    <value>Date start projects</value>
  </data>
  <data name="NameEmployee" xml:space="preserve">
    <value>Name employee</value>
  </data>
  <data name="NameGender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="NameProjects" xml:space="preserve">
    <value>Name project</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>The "Name" field must be filled</value>
  </data>
  <data name="NamPlaceOfStudy" xml:space="preserve">
    <value>Place of study</value>
  </data>
  <data name="ProjectId" xml:space="preserve">
    <value>Project №</value>
  </data>
  <data name="ProductsIdRequired" xml:space="preserve">
    <value>The "Product №" field must be filled</value>
  </data>
  <data name="SurnameEmployee" xml:space="preserve">
    <value>Surname employee</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>The "Surname" field must be filled</value>
    <comment>###############################</comment>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Choose the language</value>
  </data>
  <data name="CreateEmployee" xml:space="preserve">
    <value>Create еmployee</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EmployeeList" xml:space="preserve">
    <value>List of employees</value>
  </data>
  <data name="NamPlaceOfStudyRequired" xml:space="preserve">
    <value>The "Place of study" field must be filled</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="DateEndProjectsRequired" xml:space="preserve">
    <value>The "Date end projects" field must be filled</value>
  </data>
  <data name="DateStartProjectsRequired" xml:space="preserve">
    <value>The "Date start projects" field must be filled</value>
  </data>
  <data name="DeleteEmployee" xml:space="preserve">
    <value>Delete employee</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Do you really want to delete this employee?</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>– application ASP.NET</value>
  </data>
  <data name="ProjectAdd" xml:space="preserve">
    <value>Add project</value>
  </data>
  <data name="ProjectList" xml:space="preserve">
    <value>List of project</value>
  </data>
  <data name="ProjectNameRequired" xml:space="preserve">
    <value>The "Name project" field must be filled</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Blocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="BlockedMessage" xml:space="preserve">
    <value>Error processing request</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="SelectAction" xml:space="preserve">
    <value>Select an action</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="EducationRequired" xml:space="preserve">
    <value>The "Education" field must be filled</value>
  </data>
  <data name="NameGenderRequired" xml:space="preserve">
    <value>The "Gender" field must be filled</value>
  </data>
  <data name="Name_customer" xml:space="preserve">
    <value>Name customer</value>
  </data>
  <data name="Name_customerRequired" xml:space="preserve">
    <value>The "Name customer" field must be filled</value>
  </data>
  <data name="OrdersId" xml:space="preserve">
    <value>Order №</value>
  </data>
  <data name="OrdersIdRequired" xml:space="preserve">
    <value>The "Order №" field must be filled</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ChoseProduct" xml:space="preserve">
    <value>Choose a product</value>
  </data>
  <data name="CreateOrder" xml:space="preserve">
    <value>Create order</value>
  </data>
  <data name="DateOfCompletion" xml:space="preserve">
    <value>Date of completion</value>
  </data>
  <data name="Manufacturer" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="MNumber" xml:space="preserve">
    <value>Mobile number</value>
  </data>
  <data name="MNumberRequired" xml:space="preserve">
    <value>The "Mobile number" field must be filled</value>
  </data>
  <data name="OrderHistory" xml:space="preserve">
    <value>Order history</value>
  </data>
  <data name="OrderProducts" xml:space="preserve">
    <value>Order products</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductsId" xml:space="preserve">
    <value>Product №</value>
  </data>
  <data name="Stock" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="Surname_customer" xml:space="preserve">
    <value>Surname customer</value>
  </data>
  <data name="Surname_customerRequired" xml:space="preserve">
    <value>The "Surname customer" field must be filled</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="DateOfCompletionRequired" xml:space="preserve">
    <value>The "Date of completion" field must be filled</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>The "Email" field must be filled</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>The total cost</value>
  </data>
  <data name="CategoryRequired" xml:space="preserve">
    <value>The "Category" field must be filled</value>
  </data>
  <data name="Date_of_delivery" xml:space="preserve">
    <value>Date of delivery</value>
  </data>
  <data name="Date_of_deliveryRequired" xml:space="preserve">
    <value>The "Date of deliveryr" field must be filled</value>
  </data>
  <data name="ManufacturerRequred" xml:space="preserve">
    <value>The "Manufacturer" field must be filled</value>
  </data>
</root>